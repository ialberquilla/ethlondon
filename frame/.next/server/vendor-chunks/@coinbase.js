"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@coinbase";
exports.ids = ["vendor-chunks/@coinbase"];
exports.modules = {

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/components/FrameMetadata.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/components/FrameMetadata.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst react = __webpack_require__(/*! react */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react.js\");\nconst jsxRuntime = __webpack_require__(/*! react/jsx-runtime */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/rsc/react-jsx-runtime.js\");\n/**\n * FrameMetadata component\n *\n * @description\n * This component is used to add React Frame Metadata to the page.\n *\n * @example\n * ```tsx\n * <FrameMetadata\n *   buttons={[\n *     {\n *       label: 'Tell me the story',\n *     },\n *     {\n *       label: 'Redirect to cute dog pictures',\n *       action: 'post_redirect',\n *     },\n *     {\n *      label: 'Mint',\n *      action: 'mint',\n *      target: 'https://zizzamia.xyz/api/frame/mint',\n *    },\n *   ]}\n *   image=\"https://zizzamia.xyz/park-1.png\"\n *   input={{\n *     text: 'Tell me a boat story',\n *   }}\n *   postUrl=\"https://zizzamia.xyz/api/frame\"\n * />\n * ```\n *\n * @param {FrameMetadataReact} props - The metadata for the frame.\n * @param {Array<{ label: string, action?: string }>} props.buttons - The buttons.\n * @param {string | { src: string, aspectRatio?: string }} props.image - The image URL.\n * @param {string} props.input - The input text.\n * @param {string} props.ogDescription - The Open Graph description.\n * @param {string} props.ogTitle - The Open Graph title.\n * @param {string} props.postUrl - The post URL.\n * @param {number} props.refreshPeriod - The refresh period.\n * @param {object} props.state - The serialized state (e.g. JSON) for the frame.\n * @param {React.ComponentType<any> | undefined} props.wrapper - The wrapper component meta tags are rendered in.\n * @returns {React.ReactElement} The FrameMetadata component.\n */ function FrameMetadata({ buttons, image, input, ogDescription, ogTitle, postUrl, post_url, refreshPeriod, refresh_period, state, wrapper: Wrapper = react.Fragment }) {\n    const button1 = buttons && buttons[0];\n    const button2 = buttons && buttons[1];\n    const button3 = buttons && buttons[2];\n    const button4 = buttons && buttons[3];\n    const postUrlToUse = postUrl || post_url;\n    const refreshPeriodToUse = refreshPeriod || refresh_period;\n    const imageSrc = typeof image === \"string\" ? image : image.src;\n    const aspectRatio = typeof image === \"string\" ? undefined : image.aspectRatio;\n    // Important: To ensure smooth functionality when used\n    // with Helmet as a wrapper component, it is crucial to flatten the Buttons loop.\n    return /*#__PURE__*/ jsxRuntime.jsxs(Wrapper, {\n        children: [\n            !!ogDescription && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"og:description\",\n                content: ogDescription\n            }),\n            !!ogTitle && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"og:title\",\n                content: ogTitle\n            }),\n            /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame\",\n                content: \"vNext\"\n            }),\n            /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"og:image\",\n                content: imageSrc\n            }),\n            !!imageSrc && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:image\",\n                content: imageSrc\n            }),\n            !!aspectRatio && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:image:aspect_ratio\",\n                content: aspectRatio\n            }),\n            !!input && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:input:text\",\n                content: input.text\n            }),\n            !!state && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:state\",\n                content: encodeURIComponent(JSON.stringify(state))\n            }),\n            !!button1 && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:1\",\n                content: button1.label\n            }),\n            !!(button1 && !!button1.action) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:1:action\",\n                content: button1.action\n            }),\n            !!(button1 && button1.target) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:1:target\",\n                content: button1.target\n            }),\n            !!(button1 && button1.action === \"tx\" && button1.postUrl) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:1:post_url\",\n                content: button1.postUrl\n            }),\n            !!button2 && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:2\",\n                content: button2.label\n            }),\n            !!(button2 && !!button2.action) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:2:action\",\n                content: button2.action\n            }),\n            !!(button2 && button2.target) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:2:target\",\n                content: button2.target\n            }),\n            !!(button2 && button2.action === \"tx\" && button2.postUrl) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:2:post_url\",\n                content: button2.postUrl\n            }),\n            !!button3 && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:3\",\n                content: button3.label\n            }),\n            !!(button3 && !!button3.action) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:3:action\",\n                content: button3.action\n            }),\n            !!(button3 && button3.target) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:3:target\",\n                content: button3.target\n            }),\n            !!(button3 && button3.action === \"tx\" && button3.postUrl) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:3:post_url\",\n                content: button3.postUrl\n            }),\n            !!button4 && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:4\",\n                content: button4.label\n            }),\n            !!(button4 && !!button4.action) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:4:action\",\n                content: button4.action\n            }),\n            !!(button4 && button4.target) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:4:target\",\n                content: button4.target\n            }),\n            !!(button4 && button4.action === \"tx\" && button4.postUrl) && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:button:4:post_url\",\n                content: button4.postUrl\n            }),\n            !!postUrlToUse && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:post_url\",\n                content: postUrlToUse\n            }),\n            !!refreshPeriodToUse && /*#__PURE__*/ jsxRuntime.jsx(\"meta\", {\n                property: \"fc:frame:refresh_period\",\n                content: refreshPeriodToUse.toString()\n            })\n        ]\n    });\n}\nexports.FrameMetadata = FrameMetadata; //# sourceMappingURL=FrameMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/components/FrameMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameHtmlResponse.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/getFrameHtmlResponse.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Returns an HTML string containing metadata for a new valid frame.\n *\n * @param buttons: The buttons to use for the frame.\n * @param image: The image to use for the frame.\n * @param input: The text input to use for the frame.\n * @param ogDescription: The Open Graph description for the frame.\n * @param ogTitle: The Open Graph title for the frame.\n * @param postUrl: The URL to post the frame to.\n * @param refreshPeriod: The refresh period for the image used.\n * @param state: The serialized state (e.g. JSON) for the frame.\n * @returns An HTML string containing metadata for the frame.\n */ function getFrameHtmlResponse({ buttons, image, input, ogDescription, ogTitle, postUrl, post_url, refreshPeriod, refresh_period, state }) {\n    const imgSrc = typeof image === \"string\" ? image : image.src;\n    const ogImageHtml = `  <meta property=\"og:image\" content=\"${imgSrc}\" />\\n`;\n    let imageHtml = `  <meta property=\"fc:frame:image\" content=\"${imgSrc}\" />\\n`;\n    if (typeof image !== \"string\" && image.aspectRatio) {\n        imageHtml += `  <meta property=\"fc:frame:image:aspect_ratio\" content=\"${image.aspectRatio}\" />\\n`;\n    }\n    // Set the input metadata if it exists.\n    const inputHtml = input ? `  <meta property=\"fc:frame:input:text\" content=\"${input.text}\" />\\n` : \"\";\n    // Set the state metadata if it exists.\n    const stateHtml = state ? `  <meta property=\"fc:frame:state\" content=\"${encodeURIComponent(JSON.stringify(state))}\" />\\n` : \"\";\n    // Set the button metadata if it exists.\n    let buttonsHtml = \"\";\n    if (buttons) {\n        buttonsHtml = buttons.map((button, index)=>{\n            let buttonHtml = `  <meta property=\"fc:frame:button:${index + 1}\" content=\"${button.label}\" />\\n`;\n            if (button.action) {\n                buttonHtml += `  <meta property=\"fc:frame:button:${index + 1}:action\" content=\"${button.action}\" />\\n`;\n            }\n            if (button.action && button.target) {\n                buttonHtml += `  <meta property=\"fc:frame:button:${index + 1}:target\" content=\"${button.target}\" />\\n`;\n            }\n            if (button.action && button.action === \"tx\" && button.postUrl) {\n                buttonHtml += `  <meta property=\"fc:frame:button:${index + 1}:post_url\" content=\"${button.postUrl}\" />\\n`;\n            }\n            return buttonHtml;\n        }).join(\"\");\n    }\n    // Set the post_url metadata if it exists.\n    const postUrlToUse = postUrl || post_url;\n    const postUrlHtml = postUrlToUse ? `  <meta property=\"fc:frame:post_url\" content=\"${postUrlToUse}\" />\\n` : \"\";\n    // Set the refresh_period metadata if it exists.\n    const refreshPeriodToUse = refreshPeriod || refresh_period;\n    const refreshPeriodHtml = refreshPeriodToUse ? `  <meta property=\"fc:frame:refresh_period\" content=\"${refreshPeriodToUse.toString()}\" />\\n` : \"\";\n    // Return the HTML string containing all the metadata.\n    let html = `<!DOCTYPE html>\n<html>\n<head>\n  <meta property=\"og:description\" content=\"${ogDescription || \"Frame description\"}\" />\n  <meta property=\"og:title\" content=\"${ogTitle || \"Frame title\"}\" />\n  <meta property=\"fc:frame\" content=\"vNext\" />\n${buttonsHtml}${ogImageHtml}${imageHtml}${inputHtml}${postUrlHtml}${refreshPeriodHtml}${stateHtml}\n</head>\n</html>`;\n    return html;\n}\nexports.getFrameHtmlResponse = getFrameHtmlResponse; //# sourceMappingURL=getFrameHtmlResponse.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2dldEZyYW1lSHRtbFJlc3BvbnNlLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUE7Ozs7Ozs7Ozs7OztDQVlDLEdBQ0QsU0FBU0EscUJBQXFCLEVBQzVCQyxPQUFPLEVBQ1BDLEtBQUssRUFDTEMsS0FBSyxFQUNMQyxhQUFhLEVBQ2JDLE9BQU8sRUFDUEMsT0FBTyxFQUNQQyxRQUFRLEVBQ1JDLGFBQWEsRUFDYkMsY0FBYyxFQUNkQyxLQUFLLEVBQ047SUFDQyxNQUFNQyxTQUFTLE9BQU9ULFVBQVUsV0FBV0EsUUFBUUEsTUFBTVUsR0FBRztJQUM1RCxNQUFNQyxjQUFjLENBQUMscUNBQXFDLEVBQUVGLE9BQU8sTUFBTSxDQUFDO0lBQzFFLElBQUlHLFlBQVksQ0FBQywyQ0FBMkMsRUFBRUgsT0FBTyxNQUFNLENBQUM7SUFDNUUsSUFBSSxPQUFPVCxVQUFVLFlBQVlBLE1BQU1hLFdBQVcsRUFBRTtRQUNsREQsYUFBYSxDQUFDLHdEQUF3RCxFQUFFWixNQUFNYSxXQUFXLENBQUMsTUFBTSxDQUFDO0lBQ25HO0lBRUEsdUNBQXVDO0lBQ3ZDLE1BQU1DLFlBQVliLFFBQVEsQ0FBQyxnREFBZ0QsRUFBRUEsTUFBTWMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHO0lBRWxHLHVDQUF1QztJQUN2QyxNQUFNQyxZQUFZUixRQUFRLENBQUMsMkNBQTJDLEVBQUVTLG1CQUFtQkMsS0FBS0MsU0FBUyxDQUFDWCxRQUFRLE1BQU0sQ0FBQyxHQUFHO0lBRTVILHdDQUF3QztJQUN4QyxJQUFJWSxjQUFjO0lBQ2xCLElBQUlyQixTQUFTO1FBQ1hxQixjQUFjckIsUUFBUXNCLEdBQUcsQ0FBQyxDQUFDQyxRQUFRQztZQUNqQyxJQUFJQyxhQUFhLENBQUMsa0NBQWtDLEVBQUVELFFBQVEsRUFBRSxXQUFXLEVBQUVELE9BQU9HLEtBQUssQ0FBQyxNQUFNLENBQUM7WUFDakcsSUFBSUgsT0FBT0ksTUFBTSxFQUFFO2dCQUNqQkYsY0FBYyxDQUFDLGtDQUFrQyxFQUFFRCxRQUFRLEVBQUUsa0JBQWtCLEVBQUVELE9BQU9JLE1BQU0sQ0FBQyxNQUFNLENBQUM7WUFDeEc7WUFDQSxJQUFJSixPQUFPSSxNQUFNLElBQUlKLE9BQU9LLE1BQU0sRUFBRTtnQkFDbENILGNBQWMsQ0FBQyxrQ0FBa0MsRUFBRUQsUUFBUSxFQUFFLGtCQUFrQixFQUFFRCxPQUFPSyxNQUFNLENBQUMsTUFBTSxDQUFDO1lBQ3hHO1lBQ0EsSUFBSUwsT0FBT0ksTUFBTSxJQUFJSixPQUFPSSxNQUFNLEtBQUssUUFBUUosT0FBT2xCLE9BQU8sRUFBRTtnQkFDN0RvQixjQUFjLENBQUMsa0NBQWtDLEVBQUVELFFBQVEsRUFBRSxvQkFBb0IsRUFBRUQsT0FBT2xCLE9BQU8sQ0FBQyxNQUFNLENBQUM7WUFDM0c7WUFDQSxPQUFPb0I7UUFDVCxHQUFHSSxJQUFJLENBQUM7SUFDVjtJQUVBLDBDQUEwQztJQUMxQyxNQUFNQyxlQUFlekIsV0FBV0M7SUFDaEMsTUFBTXlCLGNBQWNELGVBQWUsQ0FBQyw4Q0FBOEMsRUFBRUEsYUFBYSxNQUFNLENBQUMsR0FBRztJQUUzRyxnREFBZ0Q7SUFDaEQsTUFBTUUscUJBQXFCekIsaUJBQWlCQztJQUM1QyxNQUFNeUIsb0JBQW9CRCxxQkFBcUIsQ0FBQyxvREFBb0QsRUFBRUEsbUJBQW1CRSxRQUFRLEdBQUcsTUFBTSxDQUFDLEdBQUc7SUFFOUksc0RBQXNEO0lBQ3RELElBQUlDLE9BQU8sQ0FBQzs7OzJDQUc2QixFQUFFaEMsaUJBQWlCLG9CQUFvQjtxQ0FDN0MsRUFBRUMsV0FBVyxjQUFjOztBQUVoRSxFQUFFaUIsWUFBWSxFQUFFVCxZQUFZLEVBQUVDLFVBQVUsRUFBRUUsVUFBVSxFQUFFZ0IsWUFBWSxFQUFFRSxrQkFBa0IsRUFBRWhCLFVBQVU7O09BRTNGLENBQUM7SUFDTixPQUFPa0I7QUFDVDtBQUNBQyw0QkFBNEIsR0FBR3JDLHNCQUMvQixnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hLWZyYW1lLWluLTEwMC1saW5lcy8uL25vZGVfbW9kdWxlcy9AY29pbmJhc2Uvb25jaGFpbmtpdC9saWIvZnJhbWUvZ2V0RnJhbWVIdG1sUmVzcG9uc2UuanM/Nzk3NyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbi8qKlxuICogUmV0dXJucyBhbiBIVE1MIHN0cmluZyBjb250YWluaW5nIG1ldGFkYXRhIGZvciBhIG5ldyB2YWxpZCBmcmFtZS5cbiAqXG4gKiBAcGFyYW0gYnV0dG9uczogVGhlIGJ1dHRvbnMgdG8gdXNlIGZvciB0aGUgZnJhbWUuXG4gKiBAcGFyYW0gaW1hZ2U6IFRoZSBpbWFnZSB0byB1c2UgZm9yIHRoZSBmcmFtZS5cbiAqIEBwYXJhbSBpbnB1dDogVGhlIHRleHQgaW5wdXQgdG8gdXNlIGZvciB0aGUgZnJhbWUuXG4gKiBAcGFyYW0gb2dEZXNjcmlwdGlvbjogVGhlIE9wZW4gR3JhcGggZGVzY3JpcHRpb24gZm9yIHRoZSBmcmFtZS5cbiAqIEBwYXJhbSBvZ1RpdGxlOiBUaGUgT3BlbiBHcmFwaCB0aXRsZSBmb3IgdGhlIGZyYW1lLlxuICogQHBhcmFtIHBvc3RVcmw6IFRoZSBVUkwgdG8gcG9zdCB0aGUgZnJhbWUgdG8uXG4gKiBAcGFyYW0gcmVmcmVzaFBlcmlvZDogVGhlIHJlZnJlc2ggcGVyaW9kIGZvciB0aGUgaW1hZ2UgdXNlZC5cbiAqIEBwYXJhbSBzdGF0ZTogVGhlIHNlcmlhbGl6ZWQgc3RhdGUgKGUuZy4gSlNPTikgZm9yIHRoZSBmcmFtZS5cbiAqIEByZXR1cm5zIEFuIEhUTUwgc3RyaW5nIGNvbnRhaW5pbmcgbWV0YWRhdGEgZm9yIHRoZSBmcmFtZS5cbiAqL1xuZnVuY3Rpb24gZ2V0RnJhbWVIdG1sUmVzcG9uc2Uoe1xuICBidXR0b25zLFxuICBpbWFnZSxcbiAgaW5wdXQsXG4gIG9nRGVzY3JpcHRpb24sXG4gIG9nVGl0bGUsXG4gIHBvc3RVcmwsXG4gIHBvc3RfdXJsLFxuICByZWZyZXNoUGVyaW9kLFxuICByZWZyZXNoX3BlcmlvZCxcbiAgc3RhdGVcbn0pIHtcbiAgY29uc3QgaW1nU3JjID0gdHlwZW9mIGltYWdlID09PSAnc3RyaW5nJyA/IGltYWdlIDogaW1hZ2Uuc3JjO1xuICBjb25zdCBvZ0ltYWdlSHRtbCA9IGAgIDxtZXRhIHByb3BlcnR5PVwib2c6aW1hZ2VcIiBjb250ZW50PVwiJHtpbWdTcmN9XCIgLz5cXG5gO1xuICBsZXQgaW1hZ2VIdG1sID0gYCAgPG1ldGEgcHJvcGVydHk9XCJmYzpmcmFtZTppbWFnZVwiIGNvbnRlbnQ9XCIke2ltZ1NyY31cIiAvPlxcbmA7XG4gIGlmICh0eXBlb2YgaW1hZ2UgIT09ICdzdHJpbmcnICYmIGltYWdlLmFzcGVjdFJhdGlvKSB7XG4gICAgaW1hZ2VIdG1sICs9IGAgIDxtZXRhIHByb3BlcnR5PVwiZmM6ZnJhbWU6aW1hZ2U6YXNwZWN0X3JhdGlvXCIgY29udGVudD1cIiR7aW1hZ2UuYXNwZWN0UmF0aW99XCIgLz5cXG5gO1xuICB9XG5cbiAgLy8gU2V0IHRoZSBpbnB1dCBtZXRhZGF0YSBpZiBpdCBleGlzdHMuXG4gIGNvbnN0IGlucHV0SHRtbCA9IGlucHV0ID8gYCAgPG1ldGEgcHJvcGVydHk9XCJmYzpmcmFtZTppbnB1dDp0ZXh0XCIgY29udGVudD1cIiR7aW5wdXQudGV4dH1cIiAvPlxcbmAgOiAnJztcblxuICAvLyBTZXQgdGhlIHN0YXRlIG1ldGFkYXRhIGlmIGl0IGV4aXN0cy5cbiAgY29uc3Qgc3RhdGVIdG1sID0gc3RhdGUgPyBgICA8bWV0YSBwcm9wZXJ0eT1cImZjOmZyYW1lOnN0YXRlXCIgY29udGVudD1cIiR7ZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHN0YXRlKSl9XCIgLz5cXG5gIDogJyc7XG5cbiAgLy8gU2V0IHRoZSBidXR0b24gbWV0YWRhdGEgaWYgaXQgZXhpc3RzLlxuICBsZXQgYnV0dG9uc0h0bWwgPSAnJztcbiAgaWYgKGJ1dHRvbnMpIHtcbiAgICBidXR0b25zSHRtbCA9IGJ1dHRvbnMubWFwKChidXR0b24sIGluZGV4KSA9PiB7XG4gICAgICBsZXQgYnV0dG9uSHRtbCA9IGAgIDxtZXRhIHByb3BlcnR5PVwiZmM6ZnJhbWU6YnV0dG9uOiR7aW5kZXggKyAxfVwiIGNvbnRlbnQ9XCIke2J1dHRvbi5sYWJlbH1cIiAvPlxcbmA7XG4gICAgICBpZiAoYnV0dG9uLmFjdGlvbikge1xuICAgICAgICBidXR0b25IdG1sICs9IGAgIDxtZXRhIHByb3BlcnR5PVwiZmM6ZnJhbWU6YnV0dG9uOiR7aW5kZXggKyAxfTphY3Rpb25cIiBjb250ZW50PVwiJHtidXR0b24uYWN0aW9ufVwiIC8+XFxuYDtcbiAgICAgIH1cbiAgICAgIGlmIChidXR0b24uYWN0aW9uICYmIGJ1dHRvbi50YXJnZXQpIHtcbiAgICAgICAgYnV0dG9uSHRtbCArPSBgICA8bWV0YSBwcm9wZXJ0eT1cImZjOmZyYW1lOmJ1dHRvbjoke2luZGV4ICsgMX06dGFyZ2V0XCIgY29udGVudD1cIiR7YnV0dG9uLnRhcmdldH1cIiAvPlxcbmA7XG4gICAgICB9XG4gICAgICBpZiAoYnV0dG9uLmFjdGlvbiAmJiBidXR0b24uYWN0aW9uID09PSAndHgnICYmIGJ1dHRvbi5wb3N0VXJsKSB7XG4gICAgICAgIGJ1dHRvbkh0bWwgKz0gYCAgPG1ldGEgcHJvcGVydHk9XCJmYzpmcmFtZTpidXR0b246JHtpbmRleCArIDF9OnBvc3RfdXJsXCIgY29udGVudD1cIiR7YnV0dG9uLnBvc3RVcmx9XCIgLz5cXG5gO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGJ1dHRvbkh0bWw7XG4gICAgfSkuam9pbignJyk7XG4gIH1cblxuICAvLyBTZXQgdGhlIHBvc3RfdXJsIG1ldGFkYXRhIGlmIGl0IGV4aXN0cy5cbiAgY29uc3QgcG9zdFVybFRvVXNlID0gcG9zdFVybCB8fCBwb3N0X3VybDtcbiAgY29uc3QgcG9zdFVybEh0bWwgPSBwb3N0VXJsVG9Vc2UgPyBgICA8bWV0YSBwcm9wZXJ0eT1cImZjOmZyYW1lOnBvc3RfdXJsXCIgY29udGVudD1cIiR7cG9zdFVybFRvVXNlfVwiIC8+XFxuYCA6ICcnO1xuXG4gIC8vIFNldCB0aGUgcmVmcmVzaF9wZXJpb2QgbWV0YWRhdGEgaWYgaXQgZXhpc3RzLlxuICBjb25zdCByZWZyZXNoUGVyaW9kVG9Vc2UgPSByZWZyZXNoUGVyaW9kIHx8IHJlZnJlc2hfcGVyaW9kO1xuICBjb25zdCByZWZyZXNoUGVyaW9kSHRtbCA9IHJlZnJlc2hQZXJpb2RUb1VzZSA/IGAgIDxtZXRhIHByb3BlcnR5PVwiZmM6ZnJhbWU6cmVmcmVzaF9wZXJpb2RcIiBjb250ZW50PVwiJHtyZWZyZXNoUGVyaW9kVG9Vc2UudG9TdHJpbmcoKX1cIiAvPlxcbmAgOiAnJztcblxuICAvLyBSZXR1cm4gdGhlIEhUTUwgc3RyaW5nIGNvbnRhaW5pbmcgYWxsIHRoZSBtZXRhZGF0YS5cbiAgbGV0IGh0bWwgPSBgPCFET0NUWVBFIGh0bWw+XG48aHRtbD5cbjxoZWFkPlxuICA8bWV0YSBwcm9wZXJ0eT1cIm9nOmRlc2NyaXB0aW9uXCIgY29udGVudD1cIiR7b2dEZXNjcmlwdGlvbiB8fCAnRnJhbWUgZGVzY3JpcHRpb24nfVwiIC8+XG4gIDxtZXRhIHByb3BlcnR5PVwib2c6dGl0bGVcIiBjb250ZW50PVwiJHtvZ1RpdGxlIHx8ICdGcmFtZSB0aXRsZSd9XCIgLz5cbiAgPG1ldGEgcHJvcGVydHk9XCJmYzpmcmFtZVwiIGNvbnRlbnQ9XCJ2TmV4dFwiIC8+XG4ke2J1dHRvbnNIdG1sfSR7b2dJbWFnZUh0bWx9JHtpbWFnZUh0bWx9JHtpbnB1dEh0bWx9JHtwb3N0VXJsSHRtbH0ke3JlZnJlc2hQZXJpb2RIdG1sfSR7c3RhdGVIdG1sfVxuPC9oZWFkPlxuPC9odG1sPmA7XG4gIHJldHVybiBodG1sO1xufVxuZXhwb3J0cy5nZXRGcmFtZUh0bWxSZXNwb25zZSA9IGdldEZyYW1lSHRtbFJlc3BvbnNlO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RnJhbWVIdG1sUmVzcG9uc2UuanMubWFwXG4iXSwibmFtZXMiOlsiZ2V0RnJhbWVIdG1sUmVzcG9uc2UiLCJidXR0b25zIiwiaW1hZ2UiLCJpbnB1dCIsIm9nRGVzY3JpcHRpb24iLCJvZ1RpdGxlIiwicG9zdFVybCIsInBvc3RfdXJsIiwicmVmcmVzaFBlcmlvZCIsInJlZnJlc2hfcGVyaW9kIiwic3RhdGUiLCJpbWdTcmMiLCJzcmMiLCJvZ0ltYWdlSHRtbCIsImltYWdlSHRtbCIsImFzcGVjdFJhdGlvIiwiaW5wdXRIdG1sIiwidGV4dCIsInN0YXRlSHRtbCIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJidXR0b25zSHRtbCIsIm1hcCIsImJ1dHRvbiIsImluZGV4IiwiYnV0dG9uSHRtbCIsImxhYmVsIiwiYWN0aW9uIiwidGFyZ2V0Iiwiam9pbiIsInBvc3RVcmxUb1VzZSIsInBvc3RVcmxIdG1sIiwicmVmcmVzaFBlcmlvZFRvVXNlIiwicmVmcmVzaFBlcmlvZEh0bWwiLCJ0b1N0cmluZyIsImh0bWwiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameHtmlResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMessage.js":
/*!************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/getFrameMessage.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst neynarFrameFunctions = __webpack_require__(/*! ../utils/neynar/frame/neynarFrameFunctions.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameFunctions.js\");\n/**\n * Given a frame message, decode and validate it.\n *\n * If message is valid, return the message. Otherwise undefined.\n *\n * @param body The JSON received by server on frame callback\n */ async function getFrameMessage(body, messageOptions) {\n    // Skip validation only when allowed and when receiving a request from framegear\n    if (messageOptions?.allowFramegear) {\n        if (body.mockFrameData) {\n            return {\n                isValid: true,\n                message: body.mockFrameData\n            };\n        }\n    }\n    // Validate the message\n    const response = await neynarFrameFunctions.neynarFrameValidation(body?.trustedData?.messageBytes, messageOptions?.neynarApiKey || neynarFrameFunctions.NEYNAR_DEFAULT_API_KEY, messageOptions?.castReactionContext || true, messageOptions?.followContext || true);\n    if (response?.valid) {\n        return {\n            isValid: true,\n            message: response\n        };\n    } else {\n        // Security best practice, don't return anything if we can't validate the frame.\n        return {\n            isValid: false,\n            message: undefined\n        };\n    }\n}\nexports.getFrameMessage = getFrameMessage; //# sourceMappingURL=getFrameMessage.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2dldEZyYW1lTWVzc2FnZS5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLHVCQUF1QkMsbUJBQU9BLENBQUM7QUFFckM7Ozs7OztDQU1DLEdBQ0QsZUFBZUMsZ0JBQWdCQyxJQUFJLEVBQUVDLGNBQWM7SUFDakQsZ0ZBQWdGO0lBQ2hGLElBQUlBLGdCQUFnQkMsZ0JBQWdCO1FBQ2xDLElBQUlGLEtBQUtHLGFBQWEsRUFBRTtZQUN0QixPQUFPO2dCQUNMQyxTQUFTO2dCQUNUQyxTQUFTTCxLQUFLRyxhQUFhO1lBQzdCO1FBQ0Y7SUFDRjtJQUVBLHVCQUF1QjtJQUN2QixNQUFNRyxXQUFXLE1BQU1ULHFCQUFxQlUscUJBQXFCLENBQUNQLE1BQU1RLGFBQWFDLGNBQWNSLGdCQUFnQlMsZ0JBQWdCYixxQkFBcUJjLHNCQUFzQixFQUFFVixnQkFBZ0JXLHVCQUF1QixNQUFNWCxnQkFBZ0JZLGlCQUFpQjtJQUM5UCxJQUFJUCxVQUFVUSxPQUFPO1FBQ25CLE9BQU87WUFDTFYsU0FBUztZQUNUQyxTQUFTQztRQUNYO0lBQ0YsT0FBTztRQUNMLGdGQUFnRjtRQUNoRixPQUFPO1lBQ0xGLFNBQVM7WUFDVEMsU0FBU1U7UUFDWDtJQUNGO0FBQ0Y7QUFDQUMsdUJBQXVCLEdBQUdqQixpQkFDMUIsMkNBQTJDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYS1mcmFtZS1pbi0xMDAtbGluZXMvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2dldEZyYW1lTWVzc2FnZS5qcz80MzVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgbmV5bmFyRnJhbWVGdW5jdGlvbnMgPSByZXF1aXJlKCcuLi91dGlscy9uZXluYXIvZnJhbWUvbmV5bmFyRnJhbWVGdW5jdGlvbnMuanMnKTtcblxuLyoqXG4gKiBHaXZlbiBhIGZyYW1lIG1lc3NhZ2UsIGRlY29kZSBhbmQgdmFsaWRhdGUgaXQuXG4gKlxuICogSWYgbWVzc2FnZSBpcyB2YWxpZCwgcmV0dXJuIHRoZSBtZXNzYWdlLiBPdGhlcndpc2UgdW5kZWZpbmVkLlxuICpcbiAqIEBwYXJhbSBib2R5IFRoZSBKU09OIHJlY2VpdmVkIGJ5IHNlcnZlciBvbiBmcmFtZSBjYWxsYmFja1xuICovXG5hc3luYyBmdW5jdGlvbiBnZXRGcmFtZU1lc3NhZ2UoYm9keSwgbWVzc2FnZU9wdGlvbnMpIHtcbiAgLy8gU2tpcCB2YWxpZGF0aW9uIG9ubHkgd2hlbiBhbGxvd2VkIGFuZCB3aGVuIHJlY2VpdmluZyBhIHJlcXVlc3QgZnJvbSBmcmFtZWdlYXJcbiAgaWYgKG1lc3NhZ2VPcHRpb25zPy5hbGxvd0ZyYW1lZ2Vhcikge1xuICAgIGlmIChib2R5Lm1vY2tGcmFtZURhdGEpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIGlzVmFsaWQ6IHRydWUsXG4gICAgICAgIG1lc3NhZ2U6IGJvZHkubW9ja0ZyYW1lRGF0YVxuICAgICAgfTtcbiAgICB9XG4gIH1cblxuICAvLyBWYWxpZGF0ZSB0aGUgbWVzc2FnZVxuICBjb25zdCByZXNwb25zZSA9IGF3YWl0IG5leW5hckZyYW1lRnVuY3Rpb25zLm5leW5hckZyYW1lVmFsaWRhdGlvbihib2R5Py50cnVzdGVkRGF0YT8ubWVzc2FnZUJ5dGVzLCBtZXNzYWdlT3B0aW9ucz8ubmV5bmFyQXBpS2V5IHx8IG5leW5hckZyYW1lRnVuY3Rpb25zLk5FWU5BUl9ERUZBVUxUX0FQSV9LRVksIG1lc3NhZ2VPcHRpb25zPy5jYXN0UmVhY3Rpb25Db250ZXh0IHx8IHRydWUsIG1lc3NhZ2VPcHRpb25zPy5mb2xsb3dDb250ZXh0IHx8IHRydWUpO1xuICBpZiAocmVzcG9uc2U/LnZhbGlkKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIGlzVmFsaWQ6IHRydWUsXG4gICAgICBtZXNzYWdlOiByZXNwb25zZVxuICAgIH07XG4gIH0gZWxzZSB7XG4gICAgLy8gU2VjdXJpdHkgYmVzdCBwcmFjdGljZSwgZG9uJ3QgcmV0dXJuIGFueXRoaW5nIGlmIHdlIGNhbid0IHZhbGlkYXRlIHRoZSBmcmFtZS5cbiAgICByZXR1cm4ge1xuICAgICAgaXNWYWxpZDogZmFsc2UsXG4gICAgICBtZXNzYWdlOiB1bmRlZmluZWRcbiAgICB9O1xuICB9XG59XG5leHBvcnRzLmdldEZyYW1lTWVzc2FnZSA9IGdldEZyYW1lTWVzc2FnZTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWdldEZyYW1lTWVzc2FnZS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJuZXluYXJGcmFtZUZ1bmN0aW9ucyIsInJlcXVpcmUiLCJnZXRGcmFtZU1lc3NhZ2UiLCJib2R5IiwibWVzc2FnZU9wdGlvbnMiLCJhbGxvd0ZyYW1lZ2VhciIsIm1vY2tGcmFtZURhdGEiLCJpc1ZhbGlkIiwibWVzc2FnZSIsInJlc3BvbnNlIiwibmV5bmFyRnJhbWVWYWxpZGF0aW9uIiwidHJ1c3RlZERhdGEiLCJtZXNzYWdlQnl0ZXMiLCJuZXluYXJBcGlLZXkiLCJORVlOQVJfREVGQVVMVF9BUElfS0VZIiwiY2FzdFJlYWN0aW9uQ29udGV4dCIsImZvbGxvd0NvbnRleHQiLCJ2YWxpZCIsInVuZGVmaW5lZCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMessage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMetadata.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/getFrameMetadata.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * This function generates the metadata for a Farcaster Frame.\n * @param buttons: The buttons to use for the frame.\n * @param image: The image to use for the frame.\n * @param input: The text input to use for the frame.\n * @param postUrl: The URL to post the frame to.\n * @param refreshPeriod: The refresh period for the image used.\n * @param state: The serialized state (e.g. JSON) for the frame.\n * @returns The metadata for the frame.\n */ const getFrameMetadata = function({ buttons, image, input, postUrl, post_url, refreshPeriod, refresh_period, state }) {\n    const postUrlToUse = postUrl || post_url;\n    const refreshPeriodToUse = refreshPeriod || refresh_period;\n    const metadata = {\n        \"fc:frame\": \"vNext\"\n    };\n    if (typeof image === \"string\") {\n        metadata[\"fc:frame:image\"] = image;\n    } else {\n        metadata[\"fc:frame:image\"] = image.src;\n        if (image.aspectRatio) {\n            metadata[\"fc:frame:image:aspect_ratio\"] = image.aspectRatio;\n        }\n    }\n    if (input) {\n        metadata[\"fc:frame:input:text\"] = input.text;\n    }\n    if (buttons) {\n        buttons.forEach((button, index)=>{\n            metadata[`fc:frame:button:${index + 1}`] = button.label;\n            if (button.action) {\n                metadata[`fc:frame:button:${index + 1}:action`] = button.action;\n            }\n            if (button.action && button.target) {\n                metadata[`fc:frame:button:${index + 1}:target`] = button.target;\n            }\n            if (button.action && button.action === \"tx\" && button.postUrl) {\n                metadata[`fc:frame:button:${index + 1}:post_url`] = button.postUrl;\n            }\n        });\n    }\n    if (postUrlToUse) {\n        metadata[\"fc:frame:post_url\"] = postUrlToUse;\n    }\n    if (refreshPeriodToUse) {\n        metadata[\"fc:frame:refresh_period\"] = refreshPeriodToUse.toString();\n    }\n    if (state) {\n        metadata[\"fc:frame:state\"] = encodeURIComponent(JSON.stringify(state));\n    }\n    return metadata;\n};\nexports.getFrameMetadata = getFrameMetadata; //# sourceMappingURL=getFrameMetadata.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2dldEZyYW1lTWV0YWRhdGEuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7Ozs7O0NBU0MsR0FDRCxNQUFNQSxtQkFBbUIsU0FBVSxFQUNqQ0MsT0FBTyxFQUNQQyxLQUFLLEVBQ0xDLEtBQUssRUFDTEMsT0FBTyxFQUNQQyxRQUFRLEVBQ1JDLGFBQWEsRUFDYkMsY0FBYyxFQUNkQyxLQUFLLEVBQ047SUFDQyxNQUFNQyxlQUFlTCxXQUFXQztJQUNoQyxNQUFNSyxxQkFBcUJKLGlCQUFpQkM7SUFDNUMsTUFBTUksV0FBVztRQUNmLFlBQVk7SUFDZDtJQUNBLElBQUksT0FBT1QsVUFBVSxVQUFVO1FBQzdCUyxRQUFRLENBQUMsaUJBQWlCLEdBQUdUO0lBQy9CLE9BQU87UUFDTFMsUUFBUSxDQUFDLGlCQUFpQixHQUFHVCxNQUFNVSxHQUFHO1FBQ3RDLElBQUlWLE1BQU1XLFdBQVcsRUFBRTtZQUNyQkYsUUFBUSxDQUFDLDhCQUE4QixHQUFHVCxNQUFNVyxXQUFXO1FBQzdEO0lBQ0Y7SUFDQSxJQUFJVixPQUFPO1FBQ1RRLFFBQVEsQ0FBQyxzQkFBc0IsR0FBR1IsTUFBTVcsSUFBSTtJQUM5QztJQUNBLElBQUliLFNBQVM7UUFDWEEsUUFBUWMsT0FBTyxDQUFDLENBQUNDLFFBQVFDO1lBQ3ZCTixRQUFRLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRU0sUUFBUSxFQUFFLENBQUMsQ0FBQyxHQUFHRCxPQUFPRSxLQUFLO1lBQ3ZELElBQUlGLE9BQU9HLE1BQU0sRUFBRTtnQkFDakJSLFFBQVEsQ0FBQyxDQUFDLGdCQUFnQixFQUFFTSxRQUFRLEVBQUUsT0FBTyxDQUFDLENBQUMsR0FBR0QsT0FBT0csTUFBTTtZQUNqRTtZQUNBLElBQUlILE9BQU9HLE1BQU0sSUFBSUgsT0FBT0ksTUFBTSxFQUFFO2dCQUNsQ1QsUUFBUSxDQUFDLENBQUMsZ0JBQWdCLEVBQUVNLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQyxHQUFHRCxPQUFPSSxNQUFNO1lBQ2pFO1lBQ0EsSUFBSUosT0FBT0csTUFBTSxJQUFJSCxPQUFPRyxNQUFNLEtBQUssUUFBUUgsT0FBT1osT0FBTyxFQUFFO2dCQUM3RE8sUUFBUSxDQUFDLENBQUMsZ0JBQWdCLEVBQUVNLFFBQVEsRUFBRSxTQUFTLENBQUMsQ0FBQyxHQUFHRCxPQUFPWixPQUFPO1lBQ3BFO1FBQ0Y7SUFDRjtJQUNBLElBQUlLLGNBQWM7UUFDaEJFLFFBQVEsQ0FBQyxvQkFBb0IsR0FBR0Y7SUFDbEM7SUFDQSxJQUFJQyxvQkFBb0I7UUFDdEJDLFFBQVEsQ0FBQywwQkFBMEIsR0FBR0QsbUJBQW1CVyxRQUFRO0lBQ25FO0lBQ0EsSUFBSWIsT0FBTztRQUNURyxRQUFRLENBQUMsaUJBQWlCLEdBQUdXLG1CQUFtQkMsS0FBS0MsU0FBUyxDQUFDaEI7SUFDakU7SUFDQSxPQUFPRztBQUNUO0FBQ0FjLHdCQUF3QixHQUFHekIsa0JBQzNCLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2EtZnJhbWUtaW4tMTAwLWxpbmVzLy4vbm9kZV9tb2R1bGVzL0Bjb2luYmFzZS9vbmNoYWlua2l0L2xpYi9mcmFtZS9nZXRGcmFtZU1ldGFkYXRhLmpzPzdmNTUiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG4vKipcbiAqIFRoaXMgZnVuY3Rpb24gZ2VuZXJhdGVzIHRoZSBtZXRhZGF0YSBmb3IgYSBGYXJjYXN0ZXIgRnJhbWUuXG4gKiBAcGFyYW0gYnV0dG9uczogVGhlIGJ1dHRvbnMgdG8gdXNlIGZvciB0aGUgZnJhbWUuXG4gKiBAcGFyYW0gaW1hZ2U6IFRoZSBpbWFnZSB0byB1c2UgZm9yIHRoZSBmcmFtZS5cbiAqIEBwYXJhbSBpbnB1dDogVGhlIHRleHQgaW5wdXQgdG8gdXNlIGZvciB0aGUgZnJhbWUuXG4gKiBAcGFyYW0gcG9zdFVybDogVGhlIFVSTCB0byBwb3N0IHRoZSBmcmFtZSB0by5cbiAqIEBwYXJhbSByZWZyZXNoUGVyaW9kOiBUaGUgcmVmcmVzaCBwZXJpb2QgZm9yIHRoZSBpbWFnZSB1c2VkLlxuICogQHBhcmFtIHN0YXRlOiBUaGUgc2VyaWFsaXplZCBzdGF0ZSAoZS5nLiBKU09OKSBmb3IgdGhlIGZyYW1lLlxuICogQHJldHVybnMgVGhlIG1ldGFkYXRhIGZvciB0aGUgZnJhbWUuXG4gKi9cbmNvbnN0IGdldEZyYW1lTWV0YWRhdGEgPSBmdW5jdGlvbiAoe1xuICBidXR0b25zLFxuICBpbWFnZSxcbiAgaW5wdXQsXG4gIHBvc3RVcmwsXG4gIHBvc3RfdXJsLFxuICByZWZyZXNoUGVyaW9kLFxuICByZWZyZXNoX3BlcmlvZCxcbiAgc3RhdGVcbn0pIHtcbiAgY29uc3QgcG9zdFVybFRvVXNlID0gcG9zdFVybCB8fCBwb3N0X3VybDtcbiAgY29uc3QgcmVmcmVzaFBlcmlvZFRvVXNlID0gcmVmcmVzaFBlcmlvZCB8fCByZWZyZXNoX3BlcmlvZDtcbiAgY29uc3QgbWV0YWRhdGEgPSB7XG4gICAgJ2ZjOmZyYW1lJzogJ3ZOZXh0J1xuICB9O1xuICBpZiAodHlwZW9mIGltYWdlID09PSAnc3RyaW5nJykge1xuICAgIG1ldGFkYXRhWydmYzpmcmFtZTppbWFnZSddID0gaW1hZ2U7XG4gIH0gZWxzZSB7XG4gICAgbWV0YWRhdGFbJ2ZjOmZyYW1lOmltYWdlJ10gPSBpbWFnZS5zcmM7XG4gICAgaWYgKGltYWdlLmFzcGVjdFJhdGlvKSB7XG4gICAgICBtZXRhZGF0YVsnZmM6ZnJhbWU6aW1hZ2U6YXNwZWN0X3JhdGlvJ10gPSBpbWFnZS5hc3BlY3RSYXRpbztcbiAgICB9XG4gIH1cbiAgaWYgKGlucHV0KSB7XG4gICAgbWV0YWRhdGFbJ2ZjOmZyYW1lOmlucHV0OnRleHQnXSA9IGlucHV0LnRleHQ7XG4gIH1cbiAgaWYgKGJ1dHRvbnMpIHtcbiAgICBidXR0b25zLmZvckVhY2goKGJ1dHRvbiwgaW5kZXgpID0+IHtcbiAgICAgIG1ldGFkYXRhW2BmYzpmcmFtZTpidXR0b246JHtpbmRleCArIDF9YF0gPSBidXR0b24ubGFiZWw7XG4gICAgICBpZiAoYnV0dG9uLmFjdGlvbikge1xuICAgICAgICBtZXRhZGF0YVtgZmM6ZnJhbWU6YnV0dG9uOiR7aW5kZXggKyAxfTphY3Rpb25gXSA9IGJ1dHRvbi5hY3Rpb247XG4gICAgICB9XG4gICAgICBpZiAoYnV0dG9uLmFjdGlvbiAmJiBidXR0b24udGFyZ2V0KSB7XG4gICAgICAgIG1ldGFkYXRhW2BmYzpmcmFtZTpidXR0b246JHtpbmRleCArIDF9OnRhcmdldGBdID0gYnV0dG9uLnRhcmdldDtcbiAgICAgIH1cbiAgICAgIGlmIChidXR0b24uYWN0aW9uICYmIGJ1dHRvbi5hY3Rpb24gPT09ICd0eCcgJiYgYnV0dG9uLnBvc3RVcmwpIHtcbiAgICAgICAgbWV0YWRhdGFbYGZjOmZyYW1lOmJ1dHRvbjoke2luZGV4ICsgMX06cG9zdF91cmxgXSA9IGJ1dHRvbi5wb3N0VXJsO1xuICAgICAgfVxuICAgIH0pO1xuICB9XG4gIGlmIChwb3N0VXJsVG9Vc2UpIHtcbiAgICBtZXRhZGF0YVsnZmM6ZnJhbWU6cG9zdF91cmwnXSA9IHBvc3RVcmxUb1VzZTtcbiAgfVxuICBpZiAocmVmcmVzaFBlcmlvZFRvVXNlKSB7XG4gICAgbWV0YWRhdGFbJ2ZjOmZyYW1lOnJlZnJlc2hfcGVyaW9kJ10gPSByZWZyZXNoUGVyaW9kVG9Vc2UudG9TdHJpbmcoKTtcbiAgfVxuICBpZiAoc3RhdGUpIHtcbiAgICBtZXRhZGF0YVsnZmM6ZnJhbWU6c3RhdGUnXSA9IGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzdGF0ZSkpO1xuICB9XG4gIHJldHVybiBtZXRhZGF0YTtcbn07XG5leHBvcnRzLmdldEZyYW1lTWV0YWRhdGEgPSBnZXRGcmFtZU1ldGFkYXRhO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9Z2V0RnJhbWVNZXRhZGF0YS5qcy5tYXBcbiJdLCJuYW1lcyI6WyJnZXRGcmFtZU1ldGFkYXRhIiwiYnV0dG9ucyIsImltYWdlIiwiaW5wdXQiLCJwb3N0VXJsIiwicG9zdF91cmwiLCJyZWZyZXNoUGVyaW9kIiwicmVmcmVzaF9wZXJpb2QiLCJzdGF0ZSIsInBvc3RVcmxUb1VzZSIsInJlZnJlc2hQZXJpb2RUb1VzZSIsIm1ldGFkYXRhIiwic3JjIiwiYXNwZWN0UmF0aW8iLCJ0ZXh0IiwiZm9yRWFjaCIsImJ1dHRvbiIsImluZGV4IiwibGFiZWwiLCJhY3Rpb24iLCJ0YXJnZXQiLCJ0b1N0cmluZyIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getMockFrameRequest.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/getMockFrameRequest.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\n/**\n * Modify a standard frame request to include simulated values (e.g., indicate the viewer\n * follows the cast author) for development/debugging purposes.\n * @param request A standard frame request.\n * @param options An object containing values we will pretend are real for the purposes of debugging.\n * @returns\n */ function ownKeys(e, r) {\n    var t = Object.keys(e);\n    if (Object.getOwnPropertySymbols) {\n        var o = Object.getOwnPropertySymbols(e);\n        r && (o = o.filter(function(r) {\n            return Object.getOwnPropertyDescriptor(e, r).enumerable;\n        })), t.push.apply(t, o);\n    }\n    return t;\n}\nfunction _objectSpread(e) {\n    for(var r = 1; r < arguments.length; r++){\n        var t = null != arguments[r] ? arguments[r] : {};\n        r % 2 ? ownKeys(Object(t), !0).forEach(function(r) {\n            _defineProperty(e, r, t[r]);\n        }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r) {\n            Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n        });\n    }\n    return e;\n}\nfunction _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (void 0 !== e) {\n        var i = e.call(t, r || \"default\");\n        if (\"object\" != typeof i) return i;\n        throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (\"string\" === r ? String : Number)(t);\n}\nfunction getMockFrameRequest(request, options) {\n    return _objectSpread(_objectSpread({}, request), {}, {\n        mockFrameData: {\n            button: request.untrustedData.buttonIndex,\n            following: !!options?.following,\n            input: request.untrustedData.inputText,\n            interactor: {\n                fid: options?.interactor?.fid || 0,\n                custody_address: options?.interactor?.custody_address || \"0xnotarealaddress\",\n                verified_accounts: options?.interactor?.verified_accounts || [],\n                verified_addresses: {\n                    eth_addresses: null,\n                    sol_addresses: null\n                }\n            },\n            liked: !!options?.liked,\n            recasted: !!options?.recasted,\n            state: {\n                serialized: request.untrustedData.state || \"\"\n            },\n            valid: true,\n            raw: {\n                valid: true,\n                // TODO: unjank\n                action: {}\n            }\n        }\n    });\n}\nexports.getMockFrameRequest = getMockFrameRequest; //# sourceMappingURL=getMockFrameRequest.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2dldE1vY2tGcmFtZVJlcXVlc3QuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQTs7Ozs7O0NBTUMsR0FDRCxTQUFTQSxRQUFRQyxDQUFDLEVBQUVDLENBQUM7SUFBSSxJQUFJQyxJQUFJQyxPQUFPQyxJQUFJLENBQUNKO0lBQUksSUFBSUcsT0FBT0UscUJBQXFCLEVBQUU7UUFBRSxJQUFJQyxJQUFJSCxPQUFPRSxxQkFBcUIsQ0FBQ0w7UUFBSUMsS0FBTUssQ0FBQUEsSUFBSUEsRUFBRUMsTUFBTSxDQUFDLFNBQVVOLENBQUM7WUFBSSxPQUFPRSxPQUFPSyx3QkFBd0IsQ0FBQ1IsR0FBR0MsR0FBR1EsVUFBVTtRQUFFLEVBQUMsR0FBSVAsRUFBRVEsSUFBSSxDQUFDQyxLQUFLLENBQUNULEdBQUdJO0lBQUk7SUFBRSxPQUFPSjtBQUFHO0FBQzlQLFNBQVNVLGNBQWNaLENBQUM7SUFBSSxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSVksVUFBVUMsTUFBTSxFQUFFYixJQUFLO1FBQUUsSUFBSUMsSUFBSSxRQUFRVyxTQUFTLENBQUNaLEVBQUUsR0FBR1ksU0FBUyxDQUFDWixFQUFFLEdBQUcsQ0FBQztRQUFHQSxJQUFJLElBQUlGLFFBQVFJLE9BQU9ELElBQUksQ0FBQyxHQUFHYSxPQUFPLENBQUMsU0FBVWQsQ0FBQztZQUFJZSxnQkFBZ0JoQixHQUFHQyxHQUFHQyxDQUFDLENBQUNELEVBQUU7UUFBRyxLQUFLRSxPQUFPYyx5QkFBeUIsR0FBR2QsT0FBT2UsZ0JBQWdCLENBQUNsQixHQUFHRyxPQUFPYyx5QkFBeUIsQ0FBQ2YsTUFBTUgsUUFBUUksT0FBT0QsSUFBSWEsT0FBTyxDQUFDLFNBQVVkLENBQUM7WUFBSUUsT0FBT2dCLGNBQWMsQ0FBQ25CLEdBQUdDLEdBQUdFLE9BQU9LLHdCQUF3QixDQUFDTixHQUFHRDtRQUFLO0lBQUk7SUFBRSxPQUFPRDtBQUFHO0FBQ3RiLFNBQVNnQixnQkFBZ0JJLEdBQUcsRUFBRUMsR0FBRyxFQUFFQyxLQUFLO0lBQUlELE1BQU1FLGVBQWVGO0lBQU0sSUFBSUEsT0FBT0QsS0FBSztRQUFFakIsT0FBT2dCLGNBQWMsQ0FBQ0MsS0FBS0MsS0FBSztZQUFFQyxPQUFPQTtZQUFPYixZQUFZO1lBQU1lLGNBQWM7WUFBTUMsVUFBVTtRQUFLO0lBQUksT0FBTztRQUFFTCxHQUFHLENBQUNDLElBQUksR0FBR0M7SUFBTztJQUFFLE9BQU9GO0FBQUs7QUFDM08sU0FBU0csZUFBZXJCLENBQUM7SUFBSSxJQUFJd0IsSUFBSUMsYUFBYXpCLEdBQUc7SUFBVyxPQUFPLFlBQVksT0FBT3dCLElBQUlBLElBQUlFLE9BQU9GO0FBQUk7QUFDN0csU0FBU0MsYUFBYXpCLENBQUMsRUFBRUQsQ0FBQztJQUFJLElBQUksWUFBWSxPQUFPQyxLQUFLLENBQUNBLEdBQUcsT0FBT0E7SUFBRyxJQUFJRixJQUFJRSxDQUFDLENBQUMyQixPQUFPQyxXQUFXLENBQUM7SUFBRSxJQUFJLEtBQUssTUFBTTlCLEdBQUc7UUFBRSxJQUFJMEIsSUFBSTFCLEVBQUUrQixJQUFJLENBQUM3QixHQUFHRCxLQUFLO1FBQVksSUFBSSxZQUFZLE9BQU95QixHQUFHLE9BQU9BO1FBQUcsTUFBTSxJQUFJTSxVQUFVO0lBQWlEO0lBQUUsT0FBTyxDQUFDLGFBQWEvQixJQUFJMkIsU0FBU0ssTUFBSyxFQUFHL0I7QUFBSTtBQUN2VCxTQUFTZ0Msb0JBQW9CQyxPQUFPLEVBQUVDLE9BQU87SUFDM0MsT0FBT3hCLGNBQWNBLGNBQWMsQ0FBQyxHQUFHdUIsVUFBVSxDQUFDLEdBQUc7UUFDbkRFLGVBQWU7WUFDYkMsUUFBUUgsUUFBUUksYUFBYSxDQUFDQyxXQUFXO1lBQ3pDQyxXQUFXLENBQUMsQ0FBQ0wsU0FBU0s7WUFDdEJDLE9BQU9QLFFBQVFJLGFBQWEsQ0FBQ0ksU0FBUztZQUN0Q0MsWUFBWTtnQkFDVkMsS0FBS1QsU0FBU1EsWUFBWUMsT0FBTztnQkFDakNDLGlCQUFpQlYsU0FBU1EsWUFBWUUsbUJBQW1CO2dCQUN6REMsbUJBQW1CWCxTQUFTUSxZQUFZRyxxQkFBcUIsRUFBRTtnQkFDL0RDLG9CQUFvQjtvQkFDbEJDLGVBQWU7b0JBQ2ZDLGVBQWU7Z0JBQ2pCO1lBQ0Y7WUFDQUMsT0FBTyxDQUFDLENBQUNmLFNBQVNlO1lBQ2xCQyxVQUFVLENBQUMsQ0FBQ2hCLFNBQVNnQjtZQUNyQkMsT0FBTztnQkFDTEMsWUFBWW5CLFFBQVFJLGFBQWEsQ0FBQ2MsS0FBSyxJQUFJO1lBQzdDO1lBQ0FFLE9BQU87WUFDUEMsS0FBSztnQkFDSEQsT0FBTztnQkFDUCxlQUFlO2dCQUNmRSxRQUFRLENBQUM7WUFDWDtRQUNGO0lBQ0Y7QUFDRjtBQUNBQywyQkFBMkIsR0FBR3hCLHFCQUM5QiwrQ0FBK0MiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hLWZyYW1lLWluLTEwMC1saW5lcy8uL25vZGVfbW9kdWxlcy9AY29pbmJhc2Uvb25jaGFpbmtpdC9saWIvZnJhbWUvZ2V0TW9ja0ZyYW1lUmVxdWVzdC5qcz85OWVhIl0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuLyoqXG4gKiBNb2RpZnkgYSBzdGFuZGFyZCBmcmFtZSByZXF1ZXN0IHRvIGluY2x1ZGUgc2ltdWxhdGVkIHZhbHVlcyAoZS5nLiwgaW5kaWNhdGUgdGhlIHZpZXdlclxuICogZm9sbG93cyB0aGUgY2FzdCBhdXRob3IpIGZvciBkZXZlbG9wbWVudC9kZWJ1Z2dpbmcgcHVycG9zZXMuXG4gKiBAcGFyYW0gcmVxdWVzdCBBIHN0YW5kYXJkIGZyYW1lIHJlcXVlc3QuXG4gKiBAcGFyYW0gb3B0aW9ucyBBbiBvYmplY3QgY29udGFpbmluZyB2YWx1ZXMgd2Ugd2lsbCBwcmV0ZW5kIGFyZSByZWFsIGZvciB0aGUgcHVycG9zZXMgb2YgZGVidWdnaW5nLlxuICogQHJldHVybnNcbiAqL1xuZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7IHZhciB0ID0gT2JqZWN0LmtleXMoZSk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBvID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhlKTsgciAmJiAobyA9IG8uZmlsdGVyKGZ1bmN0aW9uIChyKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKGUsIHIpLmVudW1lcmFibGU7IH0pKSwgdC5wdXNoLmFwcGx5KHQsIG8pOyB9IHJldHVybiB0OyB9XG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKGUpIHsgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHsgdmFyIHQgPSBudWxsICE9IGFyZ3VtZW50c1tyXSA/IGFyZ3VtZW50c1tyXSA6IHt9OyByICUgMiA/IG93bktleXMoT2JqZWN0KHQpLCAhMCkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBfZGVmaW5lUHJvcGVydHkoZSwgciwgdFtyXSk7IH0pIDogT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMgPyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyhlLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyh0KSkgOiBvd25LZXlzKE9iamVjdCh0KSkuZm9yRWFjaChmdW5jdGlvbiAocikgeyBPYmplY3QuZGVmaW5lUHJvcGVydHkoZSwgciwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0LCByKSk7IH0pOyB9IHJldHVybiBlOyB9XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7IGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7IGlmIChrZXkgaW4gb2JqKSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvYmosIGtleSwgeyB2YWx1ZTogdmFsdWUsIGVudW1lcmFibGU6IHRydWUsIGNvbmZpZ3VyYWJsZTogdHJ1ZSwgd3JpdGFibGU6IHRydWUgfSk7IH0gZWxzZSB7IG9ialtrZXldID0gdmFsdWU7IH0gcmV0dXJuIG9iajsgfVxuZnVuY3Rpb24gX3RvUHJvcGVydHlLZXkodCkgeyB2YXIgaSA9IF90b1ByaW1pdGl2ZSh0LCBcInN0cmluZ1wiKTsgcmV0dXJuIFwic3ltYm9sXCIgPT0gdHlwZW9mIGkgPyBpIDogU3RyaW5nKGkpOyB9XG5mdW5jdGlvbiBfdG9QcmltaXRpdmUodCwgcikgeyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgdCB8fCAhdCkgcmV0dXJuIHQ7IHZhciBlID0gdFtTeW1ib2wudG9QcmltaXRpdmVdOyBpZiAodm9pZCAwICE9PSBlKSB7IHZhciBpID0gZS5jYWxsKHQsIHIgfHwgXCJkZWZhdWx0XCIpOyBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgaSkgcmV0dXJuIGk7IHRocm93IG5ldyBUeXBlRXJyb3IoXCJAQHRvUHJpbWl0aXZlIG11c3QgcmV0dXJuIGEgcHJpbWl0aXZlIHZhbHVlLlwiKTsgfSByZXR1cm4gKFwic3RyaW5nXCIgPT09IHIgPyBTdHJpbmcgOiBOdW1iZXIpKHQpOyB9XG5mdW5jdGlvbiBnZXRNb2NrRnJhbWVSZXF1ZXN0KHJlcXVlc3QsIG9wdGlvbnMpIHtcbiAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgcmVxdWVzdCksIHt9LCB7XG4gICAgbW9ja0ZyYW1lRGF0YToge1xuICAgICAgYnV0dG9uOiByZXF1ZXN0LnVudHJ1c3RlZERhdGEuYnV0dG9uSW5kZXgsXG4gICAgICBmb2xsb3dpbmc6ICEhb3B0aW9ucz8uZm9sbG93aW5nLFxuICAgICAgaW5wdXQ6IHJlcXVlc3QudW50cnVzdGVkRGF0YS5pbnB1dFRleHQsXG4gICAgICBpbnRlcmFjdG9yOiB7XG4gICAgICAgIGZpZDogb3B0aW9ucz8uaW50ZXJhY3Rvcj8uZmlkIHx8IDAsXG4gICAgICAgIGN1c3RvZHlfYWRkcmVzczogb3B0aW9ucz8uaW50ZXJhY3Rvcj8uY3VzdG9keV9hZGRyZXNzIHx8ICcweG5vdGFyZWFsYWRkcmVzcycsXG4gICAgICAgIHZlcmlmaWVkX2FjY291bnRzOiBvcHRpb25zPy5pbnRlcmFjdG9yPy52ZXJpZmllZF9hY2NvdW50cyB8fCBbXSxcbiAgICAgICAgdmVyaWZpZWRfYWRkcmVzc2VzOiB7XG4gICAgICAgICAgZXRoX2FkZHJlc3NlczogbnVsbCxcbiAgICAgICAgICBzb2xfYWRkcmVzc2VzOiBudWxsXG4gICAgICAgIH1cbiAgICAgIH0sXG4gICAgICBsaWtlZDogISFvcHRpb25zPy5saWtlZCxcbiAgICAgIHJlY2FzdGVkOiAhIW9wdGlvbnM/LnJlY2FzdGVkLFxuICAgICAgc3RhdGU6IHtcbiAgICAgICAgc2VyaWFsaXplZDogcmVxdWVzdC51bnRydXN0ZWREYXRhLnN0YXRlIHx8ICcnXG4gICAgICB9LFxuICAgICAgdmFsaWQ6IHRydWUsXG4gICAgICByYXc6IHtcbiAgICAgICAgdmFsaWQ6IHRydWUsXG4gICAgICAgIC8vIFRPRE86IHVuamFua1xuICAgICAgICBhY3Rpb246IHt9XG4gICAgICB9XG4gICAgfVxuICB9KTtcbn1cbmV4cG9ydHMuZ2V0TW9ja0ZyYW1lUmVxdWVzdCA9IGdldE1vY2tGcmFtZVJlcXVlc3Q7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1nZXRNb2NrRnJhbWVSZXF1ZXN0LmpzLm1hcFxuIl0sIm5hbWVzIjpbIm93bktleXMiLCJlIiwiciIsInQiLCJPYmplY3QiLCJrZXlzIiwiZ2V0T3duUHJvcGVydHlTeW1ib2xzIiwibyIsImZpbHRlciIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImVudW1lcmFibGUiLCJwdXNoIiwiYXBwbHkiLCJfb2JqZWN0U3ByZWFkIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwiZm9yRWFjaCIsIl9kZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvcnMiLCJkZWZpbmVQcm9wZXJ0aWVzIiwiZGVmaW5lUHJvcGVydHkiLCJvYmoiLCJrZXkiLCJ2YWx1ZSIsIl90b1Byb3BlcnR5S2V5IiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJpIiwiX3RvUHJpbWl0aXZlIiwiU3RyaW5nIiwiU3ltYm9sIiwidG9QcmltaXRpdmUiLCJjYWxsIiwiVHlwZUVycm9yIiwiTnVtYmVyIiwiZ2V0TW9ja0ZyYW1lUmVxdWVzdCIsInJlcXVlc3QiLCJvcHRpb25zIiwibW9ja0ZyYW1lRGF0YSIsImJ1dHRvbiIsInVudHJ1c3RlZERhdGEiLCJidXR0b25JbmRleCIsImZvbGxvd2luZyIsImlucHV0IiwiaW5wdXRUZXh0IiwiaW50ZXJhY3RvciIsImZpZCIsImN1c3RvZHlfYWRkcmVzcyIsInZlcmlmaWVkX2FjY291bnRzIiwidmVyaWZpZWRfYWRkcmVzc2VzIiwiZXRoX2FkZHJlc3NlcyIsInNvbF9hZGRyZXNzZXMiLCJsaWtlZCIsInJlY2FzdGVkIiwic3RhdGUiLCJzZXJpYWxpemVkIiwidmFsaWQiLCJyYXciLCJhY3Rpb24iLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getMockFrameRequest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/frame/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst FrameMetadata = __webpack_require__(/*! ./components/FrameMetadata.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/components/FrameMetadata.js\");\nconst getFrameHtmlResponse = __webpack_require__(/*! ./getFrameHtmlResponse.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameHtmlResponse.js\");\nconst getFrameMetadata = __webpack_require__(/*! ./getFrameMetadata.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMetadata.js\");\nconst getFrameMessage = __webpack_require__(/*! ./getFrameMessage.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getFrameMessage.js\");\nconst getMockFrameRequest = __webpack_require__(/*! ./getMockFrameRequest.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/getMockFrameRequest.js\");\n// 🌲☀️🌲\n// This file is the entry point for the core utilities\n// that have no dependencies on external libraries.\nexports.FrameMetadata = FrameMetadata.FrameMetadata;\nexports.getFrameHtmlResponse = getFrameHtmlResponse.getFrameHtmlResponse;\nexports.getFrameMetadata = getFrameMetadata.getFrameMetadata;\nexports.getFrameMessage = getFrameMessage.getFrameMessage;\nexports.getMockFrameRequest = getMockFrameRequest.getMockFrameRequest; //# sourceMappingURL=index.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL2ZyYW1lL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsZ0JBQWdCQyxtQkFBT0EsQ0FBQztBQUM5QixNQUFNQyx1QkFBdUJELG1CQUFPQSxDQUFDO0FBQ3JDLE1BQU1FLG1CQUFtQkYsbUJBQU9BLENBQUM7QUFDakMsTUFBTUcsa0JBQWtCSCxtQkFBT0EsQ0FBQztBQUNoQyxNQUFNSSxzQkFBc0JKLG1CQUFPQSxDQUFDO0FBRXBDLFNBQVM7QUFDVCxzREFBc0Q7QUFDdEQsbURBQW1EO0FBRW5ESyxxQkFBcUIsR0FBR04sY0FBY0EsYUFBYTtBQUNuRE0sNEJBQTRCLEdBQUdKLHFCQUFxQkEsb0JBQW9CO0FBQ3hFSSx3QkFBd0IsR0FBR0gsaUJBQWlCQSxnQkFBZ0I7QUFDNURHLHVCQUF1QixHQUFHRixnQkFBZ0JBLGVBQWU7QUFDekRFLDJCQUEyQixHQUFHRCxvQkFBb0JBLG1CQUFtQixFQUNyRSxpQ0FBaUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hLWZyYW1lLWluLTEwMC1saW5lcy8uL25vZGVfbW9kdWxlcy9AY29pbmJhc2Uvb25jaGFpbmtpdC9saWIvZnJhbWUvaW5kZXguanM/NmYxNCJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNvbnN0IEZyYW1lTWV0YWRhdGEgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvRnJhbWVNZXRhZGF0YS5qcycpO1xuY29uc3QgZ2V0RnJhbWVIdG1sUmVzcG9uc2UgPSByZXF1aXJlKCcuL2dldEZyYW1lSHRtbFJlc3BvbnNlLmpzJyk7XG5jb25zdCBnZXRGcmFtZU1ldGFkYXRhID0gcmVxdWlyZSgnLi9nZXRGcmFtZU1ldGFkYXRhLmpzJyk7XG5jb25zdCBnZXRGcmFtZU1lc3NhZ2UgPSByZXF1aXJlKCcuL2dldEZyYW1lTWVzc2FnZS5qcycpO1xuY29uc3QgZ2V0TW9ja0ZyYW1lUmVxdWVzdCA9IHJlcXVpcmUoJy4vZ2V0TW9ja0ZyYW1lUmVxdWVzdC5qcycpO1xuXG4vLyDwn4yy4piA77iP8J+MslxuLy8gVGhpcyBmaWxlIGlzIHRoZSBlbnRyeSBwb2ludCBmb3IgdGhlIGNvcmUgdXRpbGl0aWVzXG4vLyB0aGF0IGhhdmUgbm8gZGVwZW5kZW5jaWVzIG9uIGV4dGVybmFsIGxpYnJhcmllcy5cblxuZXhwb3J0cy5GcmFtZU1ldGFkYXRhID0gRnJhbWVNZXRhZGF0YS5GcmFtZU1ldGFkYXRhO1xuZXhwb3J0cy5nZXRGcmFtZUh0bWxSZXNwb25zZSA9IGdldEZyYW1lSHRtbFJlc3BvbnNlLmdldEZyYW1lSHRtbFJlc3BvbnNlO1xuZXhwb3J0cy5nZXRGcmFtZU1ldGFkYXRhID0gZ2V0RnJhbWVNZXRhZGF0YS5nZXRGcmFtZU1ldGFkYXRhO1xuZXhwb3J0cy5nZXRGcmFtZU1lc3NhZ2UgPSBnZXRGcmFtZU1lc3NhZ2UuZ2V0RnJhbWVNZXNzYWdlO1xuZXhwb3J0cy5nZXRNb2NrRnJhbWVSZXF1ZXN0ID0gZ2V0TW9ja0ZyYW1lUmVxdWVzdC5nZXRNb2NrRnJhbWVSZXF1ZXN0O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9aW5kZXguanMubWFwXG4iXSwibmFtZXMiOlsiRnJhbWVNZXRhZGF0YSIsInJlcXVpcmUiLCJnZXRGcmFtZUh0bWxSZXNwb25zZSIsImdldEZyYW1lTWV0YWRhdGEiLCJnZXRGcmFtZU1lc3NhZ2UiLCJnZXRNb2NrRnJhbWVSZXF1ZXN0IiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/frame/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/exceptions/FetchError.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/utils/neynar/exceptions/FetchError.js ***!
  \*************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nclass FetchError extends Error {\n    constructor(message){\n        super(message);\n        this.name = \"FetchError\";\n    }\n}\nexports.FetchError = FetchError; //# sourceMappingURL=FetchError.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3V0aWxzL25leW5hci9leGNlcHRpb25zL0ZldGNoRXJyb3IuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxtQkFBbUJDO0lBQ3ZCQyxZQUFZQyxPQUFPLENBQUU7UUFDbkIsS0FBSyxDQUFDQTtRQUNOLElBQUksQ0FBQ0MsSUFBSSxHQUFHO0lBQ2Q7QUFDRjtBQUNBQyxrQkFBa0IsR0FBR0wsWUFDckIsc0NBQXNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYS1mcmFtZS1pbi0xMDAtbGluZXMvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3V0aWxzL25leW5hci9leGNlcHRpb25zL0ZldGNoRXJyb3IuanM/YjNmMyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmNsYXNzIEZldGNoRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICBzdXBlcihtZXNzYWdlKTtcbiAgICB0aGlzLm5hbWUgPSAnRmV0Y2hFcnJvcic7XG4gIH1cbn1cbmV4cG9ydHMuRmV0Y2hFcnJvciA9IEZldGNoRXJyb3I7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1GZXRjaEVycm9yLmpzLm1hcFxuIl0sIm5hbWVzIjpbIkZldGNoRXJyb3IiLCJFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsIm5hbWUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/exceptions/FetchError.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameFunctions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameFunctions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst neynarFrameModels = __webpack_require__(/*! ./neynarFrameModels.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameModels.js\");\nconst postDataToNeynar = __webpack_require__(/*! ../postDataToNeynar.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/postDataToNeynar.js\");\nconst NEYNAR_DEFAULT_API_KEY = \"NEYNAR_ONCHAIN_KIT\";\nasync function neynarFrameValidation(messageBytes, apiKey = NEYNAR_DEFAULT_API_KEY, castReactionContext = true, followContext = true) {\n    const url = `https://api.neynar.com/v2/farcaster/frame/validate`;\n    const responseBody = await postDataToNeynar.postDataToNeynar(url, apiKey, {\n        message_bytes_in_hex: messageBytes,\n        cast_reaction_context: castReactionContext,\n        // Returns if the user has liked/recasted\n        follow_context: followContext // Returns if the user is Following\n    });\n    return neynarFrameModels.convertToNeynarResponseModel(responseBody);\n}\nexports.NEYNAR_DEFAULT_API_KEY = NEYNAR_DEFAULT_API_KEY;\nexports.neynarFrameValidation = neynarFrameValidation; //# sourceMappingURL=neynarFrameFunctions.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3V0aWxzL25leW5hci9mcmFtZS9uZXluYXJGcmFtZUZ1bmN0aW9ucy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLE1BQU1BLG9CQUFvQkMsbUJBQU9BLENBQUM7QUFDbEMsTUFBTUMsbUJBQW1CRCxtQkFBT0EsQ0FBQztBQUNqQyxNQUFNRSx5QkFBeUI7QUFDL0IsZUFBZUMsc0JBQXNCQyxZQUFZLEVBQUVDLFNBQVNILHNCQUFzQixFQUFFSSxzQkFBc0IsSUFBSSxFQUFFQyxnQkFBZ0IsSUFBSTtJQUNsSSxNQUFNQyxNQUFNLENBQUMsa0RBQWtELENBQUM7SUFDaEUsTUFBTUMsZUFBZSxNQUFNUixpQkFBaUJBLGdCQUFnQixDQUFDTyxLQUFLSCxRQUFRO1FBQ3hFSyxzQkFBc0JOO1FBQ3RCTyx1QkFBdUJMO1FBQ3ZCLHlDQUF5QztRQUN6Q00sZ0JBQWdCTCxjQUFjLG1DQUFtQztJQUNuRTtJQUNBLE9BQU9SLGtCQUFrQmMsNEJBQTRCLENBQUNKO0FBQ3hEO0FBQ0FLLDhCQUE4QixHQUFHWjtBQUNqQ1ksNkJBQTZCLEdBQUdYLHVCQUNoQyxnREFBZ0QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9hLWZyYW1lLWluLTEwMC1saW5lcy8uL25vZGVfbW9kdWxlcy9AY29pbmJhc2Uvb25jaGFpbmtpdC9saWIvdXRpbHMvbmV5bmFyL2ZyYW1lL25leW5hckZyYW1lRnVuY3Rpb25zLmpzP2Y4YTEiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBuZXluYXJGcmFtZU1vZGVscyA9IHJlcXVpcmUoJy4vbmV5bmFyRnJhbWVNb2RlbHMuanMnKTtcbmNvbnN0IHBvc3REYXRhVG9OZXluYXIgPSByZXF1aXJlKCcuLi9wb3N0RGF0YVRvTmV5bmFyLmpzJyk7XG5jb25zdCBORVlOQVJfREVGQVVMVF9BUElfS0VZID0gJ05FWU5BUl9PTkNIQUlOX0tJVCc7XG5hc3luYyBmdW5jdGlvbiBuZXluYXJGcmFtZVZhbGlkYXRpb24obWVzc2FnZUJ5dGVzLCBhcGlLZXkgPSBORVlOQVJfREVGQVVMVF9BUElfS0VZLCBjYXN0UmVhY3Rpb25Db250ZXh0ID0gdHJ1ZSwgZm9sbG93Q29udGV4dCA9IHRydWUpIHtcbiAgY29uc3QgdXJsID0gYGh0dHBzOi8vYXBpLm5leW5hci5jb20vdjIvZmFyY2FzdGVyL2ZyYW1lL3ZhbGlkYXRlYDtcbiAgY29uc3QgcmVzcG9uc2VCb2R5ID0gYXdhaXQgcG9zdERhdGFUb05leW5hci5wb3N0RGF0YVRvTmV5bmFyKHVybCwgYXBpS2V5LCB7XG4gICAgbWVzc2FnZV9ieXRlc19pbl9oZXg6IG1lc3NhZ2VCeXRlcyxcbiAgICBjYXN0X3JlYWN0aW9uX2NvbnRleHQ6IGNhc3RSZWFjdGlvbkNvbnRleHQsXG4gICAgLy8gUmV0dXJucyBpZiB0aGUgdXNlciBoYXMgbGlrZWQvcmVjYXN0ZWRcbiAgICBmb2xsb3dfY29udGV4dDogZm9sbG93Q29udGV4dCAvLyBSZXR1cm5zIGlmIHRoZSB1c2VyIGlzIEZvbGxvd2luZ1xuICB9KTtcbiAgcmV0dXJuIG5leW5hckZyYW1lTW9kZWxzLmNvbnZlcnRUb05leW5hclJlc3BvbnNlTW9kZWwocmVzcG9uc2VCb2R5KTtcbn1cbmV4cG9ydHMuTkVZTkFSX0RFRkFVTFRfQVBJX0tFWSA9IE5FWU5BUl9ERUZBVUxUX0FQSV9LRVk7XG5leHBvcnRzLm5leW5hckZyYW1lVmFsaWRhdGlvbiA9IG5leW5hckZyYW1lVmFsaWRhdGlvbjtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leW5hckZyYW1lRnVuY3Rpb25zLmpzLm1hcFxuIl0sIm5hbWVzIjpbIm5leW5hckZyYW1lTW9kZWxzIiwicmVxdWlyZSIsInBvc3REYXRhVG9OZXluYXIiLCJORVlOQVJfREVGQVVMVF9BUElfS0VZIiwibmV5bmFyRnJhbWVWYWxpZGF0aW9uIiwibWVzc2FnZUJ5dGVzIiwiYXBpS2V5IiwiY2FzdFJlYWN0aW9uQ29udGV4dCIsImZvbGxvd0NvbnRleHQiLCJ1cmwiLCJyZXNwb25zZUJvZHkiLCJtZXNzYWdlX2J5dGVzX2luX2hleCIsImNhc3RfcmVhY3Rpb25fY29udGV4dCIsImZvbGxvd19jb250ZXh0IiwiY29udmVydFRvTmV5bmFyUmVzcG9uc2VNb2RlbCIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameFunctions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameModels.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameModels.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nfunction convertToNeynarResponseModel(data) {\n    if (!data) {\n        return;\n    }\n    /**\n   * Note: This is not a type-safe conversion, however, balancing that risk with an additional import\n   * to include a library like AJV which can accomplish that.  Alternatively, we could write conversions\n   * for each type, but that seemed overkill.\n   */ const neynarResponse = data;\n    // Shorten paths\n    const action = neynarResponse.action;\n    const cast = action?.cast;\n    const interactor = action?.interactor;\n    return {\n        button: action?.tapped_button?.index,\n        following: action?.interactor?.viewer_context?.following,\n        input: action?.input?.text,\n        interactor: {\n            fid: interactor?.fid,\n            custody_address: interactor?.custody_address,\n            verified_accounts: interactor?.verifications,\n            verified_addresses: {\n                eth_addresses: interactor?.verified_addresses?.eth_addresses,\n                sol_addresses: interactor?.verified_addresses?.sol_addresses\n            }\n        },\n        liked: cast?.viewer_context?.liked,\n        raw: neynarResponse,\n        recasted: cast?.viewer_context?.recasted,\n        state: {\n            serialized: action?.state?.serialized || \"\"\n        },\n        valid: neynarResponse.valid\n    };\n}\nexports.convertToNeynarResponseModel = convertToNeynarResponseModel; //# sourceMappingURL=neynarFrameModels.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3V0aWxzL25leW5hci9mcmFtZS9uZXluYXJGcmFtZU1vZGVscy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUVBLFNBQVNBLDZCQUE2QkMsSUFBSTtJQUN4QyxJQUFJLENBQUNBLE1BQU07UUFDVDtJQUNGO0lBRUE7Ozs7R0FJQyxHQUNELE1BQU1DLGlCQUFpQkQ7SUFFdkIsZ0JBQWdCO0lBQ2hCLE1BQU1FLFNBQVNELGVBQWVDLE1BQU07SUFDcEMsTUFBTUMsT0FBT0QsUUFBUUM7SUFDckIsTUFBTUMsYUFBYUYsUUFBUUU7SUFDM0IsT0FBTztRQUNMQyxRQUFRSCxRQUFRSSxlQUFlQztRQUMvQkMsV0FBV04sUUFBUUUsWUFBWUssZ0JBQWdCRDtRQUMvQ0UsT0FBT1IsUUFBUVEsT0FBT0M7UUFDdEJQLFlBQVk7WUFDVlEsS0FBS1IsWUFBWVE7WUFDakJDLGlCQUFpQlQsWUFBWVM7WUFDN0JDLG1CQUFtQlYsWUFBWVc7WUFDL0JDLG9CQUFvQjtnQkFDbEJDLGVBQWViLFlBQVlZLG9CQUFvQkM7Z0JBQy9DQyxlQUFlZCxZQUFZWSxvQkFBb0JFO1lBQ2pEO1FBQ0Y7UUFDQUMsT0FBT2hCLE1BQU1NLGdCQUFnQlU7UUFDN0JDLEtBQUtuQjtRQUNMb0IsVUFBVWxCLE1BQU1NLGdCQUFnQlk7UUFDaENDLE9BQU87WUFDTEMsWUFBWXJCLFFBQVFvQixPQUFPQyxjQUFjO1FBQzNDO1FBQ0FDLE9BQU92QixlQUFldUIsS0FBSztJQUM3QjtBQUNGO0FBQ0FDLG9DQUFvQyxHQUFHMUIsOEJBQ3ZDLDZDQUE2QyIsInNvdXJjZXMiOlsid2VicGFjazovL2EtZnJhbWUtaW4tMTAwLWxpbmVzLy4vbm9kZV9tb2R1bGVzL0Bjb2luYmFzZS9vbmNoYWlua2l0L2xpYi91dGlscy9uZXluYXIvZnJhbWUvbmV5bmFyRnJhbWVNb2RlbHMuanM/OWM5NSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmZ1bmN0aW9uIGNvbnZlcnRUb05leW5hclJlc3BvbnNlTW9kZWwoZGF0YSkge1xuICBpZiAoIWRhdGEpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvKipcbiAgICogTm90ZTogVGhpcyBpcyBub3QgYSB0eXBlLXNhZmUgY29udmVyc2lvbiwgaG93ZXZlciwgYmFsYW5jaW5nIHRoYXQgcmlzayB3aXRoIGFuIGFkZGl0aW9uYWwgaW1wb3J0XG4gICAqIHRvIGluY2x1ZGUgYSBsaWJyYXJ5IGxpa2UgQUpWIHdoaWNoIGNhbiBhY2NvbXBsaXNoIHRoYXQuICBBbHRlcm5hdGl2ZWx5LCB3ZSBjb3VsZCB3cml0ZSBjb252ZXJzaW9uc1xuICAgKiBmb3IgZWFjaCB0eXBlLCBidXQgdGhhdCBzZWVtZWQgb3ZlcmtpbGwuXG4gICAqL1xuICBjb25zdCBuZXluYXJSZXNwb25zZSA9IGRhdGE7XG5cbiAgLy8gU2hvcnRlbiBwYXRoc1xuICBjb25zdCBhY3Rpb24gPSBuZXluYXJSZXNwb25zZS5hY3Rpb247XG4gIGNvbnN0IGNhc3QgPSBhY3Rpb24/LmNhc3Q7XG4gIGNvbnN0IGludGVyYWN0b3IgPSBhY3Rpb24/LmludGVyYWN0b3I7XG4gIHJldHVybiB7XG4gICAgYnV0dG9uOiBhY3Rpb24/LnRhcHBlZF9idXR0b24/LmluZGV4LFxuICAgIGZvbGxvd2luZzogYWN0aW9uPy5pbnRlcmFjdG9yPy52aWV3ZXJfY29udGV4dD8uZm9sbG93aW5nLFxuICAgIGlucHV0OiBhY3Rpb24/LmlucHV0Py50ZXh0LFxuICAgIGludGVyYWN0b3I6IHtcbiAgICAgIGZpZDogaW50ZXJhY3Rvcj8uZmlkLFxuICAgICAgY3VzdG9keV9hZGRyZXNzOiBpbnRlcmFjdG9yPy5jdXN0b2R5X2FkZHJlc3MsXG4gICAgICB2ZXJpZmllZF9hY2NvdW50czogaW50ZXJhY3Rvcj8udmVyaWZpY2F0aW9ucyxcbiAgICAgIHZlcmlmaWVkX2FkZHJlc3Nlczoge1xuICAgICAgICBldGhfYWRkcmVzc2VzOiBpbnRlcmFjdG9yPy52ZXJpZmllZF9hZGRyZXNzZXM/LmV0aF9hZGRyZXNzZXMsXG4gICAgICAgIHNvbF9hZGRyZXNzZXM6IGludGVyYWN0b3I/LnZlcmlmaWVkX2FkZHJlc3Nlcz8uc29sX2FkZHJlc3Nlc1xuICAgICAgfVxuICAgIH0sXG4gICAgbGlrZWQ6IGNhc3Q/LnZpZXdlcl9jb250ZXh0Py5saWtlZCxcbiAgICByYXc6IG5leW5hclJlc3BvbnNlLFxuICAgIHJlY2FzdGVkOiBjYXN0Py52aWV3ZXJfY29udGV4dD8ucmVjYXN0ZWQsXG4gICAgc3RhdGU6IHtcbiAgICAgIHNlcmlhbGl6ZWQ6IGFjdGlvbj8uc3RhdGU/LnNlcmlhbGl6ZWQgfHwgJydcbiAgICB9LFxuICAgIHZhbGlkOiBuZXluYXJSZXNwb25zZS52YWxpZFxuICB9O1xufVxuZXhwb3J0cy5jb252ZXJ0VG9OZXluYXJSZXNwb25zZU1vZGVsID0gY29udmVydFRvTmV5bmFyUmVzcG9uc2VNb2RlbDtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5leW5hckZyYW1lTW9kZWxzLmpzLm1hcFxuIl0sIm5hbWVzIjpbImNvbnZlcnRUb05leW5hclJlc3BvbnNlTW9kZWwiLCJkYXRhIiwibmV5bmFyUmVzcG9uc2UiLCJhY3Rpb24iLCJjYXN0IiwiaW50ZXJhY3RvciIsImJ1dHRvbiIsInRhcHBlZF9idXR0b24iLCJpbmRleCIsImZvbGxvd2luZyIsInZpZXdlcl9jb250ZXh0IiwiaW5wdXQiLCJ0ZXh0IiwiZmlkIiwiY3VzdG9keV9hZGRyZXNzIiwidmVyaWZpZWRfYWNjb3VudHMiLCJ2ZXJpZmljYXRpb25zIiwidmVyaWZpZWRfYWRkcmVzc2VzIiwiZXRoX2FkZHJlc3NlcyIsInNvbF9hZGRyZXNzZXMiLCJsaWtlZCIsInJhdyIsInJlY2FzdGVkIiwic3RhdGUiLCJzZXJpYWxpemVkIiwidmFsaWQiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameModels.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/postDataToNeynar.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/utils/neynar/postDataToNeynar.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nconst version = __webpack_require__(/*! ../../version.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/version.js\");\nconst FetchError = __webpack_require__(/*! ./exceptions/FetchError.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/exceptions/FetchError.js\");\nconst neynarFrameFunctions = __webpack_require__(/*! ./frame/neynarFrameFunctions.js */ \"(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/frame/neynarFrameFunctions.js\");\nasync function postDataToNeynar(url, apiKey = neynarFrameFunctions.NEYNAR_DEFAULT_API_KEY, data) {\n    const options = {\n        method: \"POST\",\n        url: url,\n        headers: {\n            accept: \"application/json\",\n            api_key: apiKey,\n            \"content-type\": \"application/json\",\n            onchainkit_version: version.version\n        },\n        body: JSON.stringify(data)\n    };\n    const resp = await fetch(options.url, options);\n    if (resp.status !== 200) {\n        throw new FetchError.FetchError(`non-200 status returned from neynar : ${resp.status}`);\n    }\n    return await resp.json();\n}\nexports.postDataToNeynar = postDataToNeynar; //# sourceMappingURL=postDataToNeynar.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3V0aWxzL25leW5hci9wb3N0RGF0YVRvTmV5bmFyLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBRUEsTUFBTUEsVUFBVUMsbUJBQU9BLENBQUM7QUFDeEIsTUFBTUMsYUFBYUQsbUJBQU9BLENBQUM7QUFDM0IsTUFBTUUsdUJBQXVCRixtQkFBT0EsQ0FBQztBQUNyQyxlQUFlRyxpQkFBaUJDLEdBQUcsRUFBRUMsU0FBU0gscUJBQXFCSSxzQkFBc0IsRUFBRUMsSUFBSTtJQUM3RixNQUFNQyxVQUFVO1FBQ2RDLFFBQVE7UUFDUkwsS0FBS0E7UUFDTE0sU0FBUztZQUNQQyxRQUFRO1lBQ1JDLFNBQVNQO1lBQ1QsZ0JBQWdCO1lBQ2hCUSxvQkFBb0JkLFFBQVFBLE9BQU87UUFDckM7UUFDQWUsTUFBTUMsS0FBS0MsU0FBUyxDQUFDVDtJQUN2QjtJQUNBLE1BQU1VLE9BQU8sTUFBTUMsTUFBTVYsUUFBUUosR0FBRyxFQUFFSTtJQUN0QyxJQUFJUyxLQUFLRSxNQUFNLEtBQUssS0FBSztRQUN2QixNQUFNLElBQUlsQixXQUFXQSxVQUFVLENBQUMsQ0FBQyxzQ0FBc0MsRUFBRWdCLEtBQUtFLE1BQU0sQ0FBQyxDQUFDO0lBQ3hGO0lBQ0EsT0FBTyxNQUFNRixLQUFLRyxJQUFJO0FBQ3hCO0FBQ0FDLHdCQUF3QixHQUFHbEIsa0JBQzNCLDRDQUE0QyIsInNvdXJjZXMiOlsid2VicGFjazovL2EtZnJhbWUtaW4tMTAwLWxpbmVzLy4vbm9kZV9tb2R1bGVzL0Bjb2luYmFzZS9vbmNoYWlua2l0L2xpYi91dGlscy9uZXluYXIvcG9zdERhdGFUb05leW5hci5qcz9kZjA4Il0sInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcblxuY29uc3QgdmVyc2lvbiA9IHJlcXVpcmUoJy4uLy4uL3ZlcnNpb24uanMnKTtcbmNvbnN0IEZldGNoRXJyb3IgPSByZXF1aXJlKCcuL2V4Y2VwdGlvbnMvRmV0Y2hFcnJvci5qcycpO1xuY29uc3QgbmV5bmFyRnJhbWVGdW5jdGlvbnMgPSByZXF1aXJlKCcuL2ZyYW1lL25leW5hckZyYW1lRnVuY3Rpb25zLmpzJyk7XG5hc3luYyBmdW5jdGlvbiBwb3N0RGF0YVRvTmV5bmFyKHVybCwgYXBpS2V5ID0gbmV5bmFyRnJhbWVGdW5jdGlvbnMuTkVZTkFSX0RFRkFVTFRfQVBJX0tFWSwgZGF0YSkge1xuICBjb25zdCBvcHRpb25zID0ge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIHVybDogdXJsLFxuICAgIGhlYWRlcnM6IHtcbiAgICAgIGFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgYXBpX2tleTogYXBpS2V5LFxuICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyxcbiAgICAgIG9uY2hhaW5raXRfdmVyc2lvbjogdmVyc2lvbi52ZXJzaW9uXG4gICAgfSxcbiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShkYXRhKVxuICB9O1xuICBjb25zdCByZXNwID0gYXdhaXQgZmV0Y2gob3B0aW9ucy51cmwsIG9wdGlvbnMpO1xuICBpZiAocmVzcC5zdGF0dXMgIT09IDIwMCkge1xuICAgIHRocm93IG5ldyBGZXRjaEVycm9yLkZldGNoRXJyb3IoYG5vbi0yMDAgc3RhdHVzIHJldHVybmVkIGZyb20gbmV5bmFyIDogJHtyZXNwLnN0YXR1c31gKTtcbiAgfVxuICByZXR1cm4gYXdhaXQgcmVzcC5qc29uKCk7XG59XG5leHBvcnRzLnBvc3REYXRhVG9OZXluYXIgPSBwb3N0RGF0YVRvTmV5bmFyO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cG9zdERhdGFUb05leW5hci5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwicmVxdWlyZSIsIkZldGNoRXJyb3IiLCJuZXluYXJGcmFtZUZ1bmN0aW9ucyIsInBvc3REYXRhVG9OZXluYXIiLCJ1cmwiLCJhcGlLZXkiLCJORVlOQVJfREVGQVVMVF9BUElfS0VZIiwiZGF0YSIsIm9wdGlvbnMiLCJtZXRob2QiLCJoZWFkZXJzIiwiYWNjZXB0IiwiYXBpX2tleSIsIm9uY2hhaW5raXRfdmVyc2lvbiIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwicmVzcCIsImZldGNoIiwic3RhdHVzIiwianNvbiIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/utils/neynar/postDataToNeynar.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@coinbase/onchainkit/lib/version.js":
/*!**********************************************************!*\
  !*** ./node_modules/@coinbase/onchainkit/lib/version.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nconst version = \"0.10.1\";\nexports.version = version; //# sourceMappingURL=version.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQGNvaW5iYXNlL29uY2hhaW5raXQvbGliL3ZlcnNpb24uanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFFQSxNQUFNQSxVQUFVO0FBQ2hCQyxlQUFlLEdBQUdELFNBQ2xCLG1DQUFtQyIsInNvdXJjZXMiOlsid2VicGFjazovL2EtZnJhbWUtaW4tMTAwLWxpbmVzLy4vbm9kZV9tb2R1bGVzL0Bjb2luYmFzZS9vbmNoYWlua2l0L2xpYi92ZXJzaW9uLmpzPzFhNjQiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCB2ZXJzaW9uID0gJzAuMTAuMSc7XG5leHBvcnRzLnZlcnNpb24gPSB2ZXJzaW9uO1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9dmVyc2lvbi5qcy5tYXBcbiJdLCJuYW1lcyI6WyJ2ZXJzaW9uIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@coinbase/onchainkit/lib/version.js\n");

/***/ })

};
;